[{"categories":null,"contents":"Synopsis: Catalysts comprising of metal nanoparticles dispersed on oxide supports have found applications in a vast number of chemical processes related to energy generation and environmental. In some cases, the interface between the metal and the supporting oxide is theorized to exhibit unique reactivity compared to just the metal or the oxide in isolation.\nWater-Gas Shift reaction (WGSR) is one such reaction which is expected to show sensitivity to such metal/oxide interfaces. We investigate WGSR with Pt nanoparticles supported MgO as a model system, to understand how the reaction proceed at these interfacial sites.\nKey takewaways:   The interfacial region greatly accelerate the water dissociation step which has an exceedingly high barrier on just the metal (Pt) or oxide (MgO) in isolation.\n  Partial poisoning of CO on the metal affects the over mechanism and it is important the model considers the effect explicitly\n  When developing reaction network schemes for multi-components systems the morphology of active site plays a crucial role with far-reaching consequences.\n  ","permalink":"/publications/ptmgo/","tags":["Kinetic modeling","Catalyst active-site design","DFT","Experimental Collaboration"],"title":"Catalysis at Metal/Oxide Interfaces: Water Gas Shift at Pt/MgO Boundaries"},{"categories":null,"contents":"Synopsis: Combination of experimental kinetics, state-of-the-art characterisation techiques and computation catalyst models to investigate the active site for propane dehydrogenation reaction. It is shown that alloying noble metals, platinum in this case, with another element (like vanadium) leads to changes in the catalytic performance. Through combined experiment/theory effort these performance and stability changes can be explained by perturbation in the electronic and structural properties of the alloys.\n","permalink":"/publications/pt3v/","tags":["Catalyst active-site design","DFT","Experimental Collaboration"],"title":"Electronic and Structural modification of Pt-V alloy and its consequences for Propane Dehydrogenation Catalysis"},{"categories":null,"contents":"Indian food, like most of the food from the tropical region, uses a variety of different spices. Historically, the spices are thought to have been a way to increase the shelf-life and keep pests away. Anyways, if you are planning to cook more Indian food lately, it would be great to know which spices would give you most bang for your buck. More so, which spices are often used together? What is the relation between each of them?\nRecently I found a dataset from Kaggle which tabulated 6000+ recipes from https://www.archanaskitchen.com/. Using this data as base collection of recipes representing most of the indian food, I analyze which spices occur most freqeuntly and which spices are most connected to each other.\n Dataset for Indian recipe: This dataset 6000+ recipe scrapped from: Dataset  Key results: Circular graph representing the relation between various spices. Size of the node is the relevance of that spice in the Indian cuisine i.e. number of times that spice occured in entire recipe collection. Edge color/width shows the strength of the connection amongst different spices. Right away it is seen that: Turmeric, chilli powder, and cumin are always used together.\n","permalink":"/blog/indian_spices_network_analysis/","tags":["Web scraping","Python","Network analysis"],"title":"Analysis on Spice Use in Indian Food"},{"categories":null,"contents":"Key results: ","permalink":"/blog/imdb_scrapping/","tags":["Web scraping","Python"],"title":"Bollywood Movie Rating Analysis"},{"categories":null,"contents":"","permalink":"/blog/sp500/","tags":["Web scraping","Python"],"title":"Web scraping S\u0026P 500 data"},{"categories":null,"contents":" Notebook explaining the idea behind bayesian optimization alongside a small example showing its use. This notebook was adapted from Martin Krasser\u0026rsquo;s blogpost Good introductory write-up on Bayesian optimization here Nice lecture explaining the working of Gaussian Processes here  ","permalink":"/blog/bo/","tags":["Python","Optimization"],"title":"Bayesian Optimization using Gaussian Processes"},{"categories":null,"contents":"This project is adapted from Aurelien Geron\u0026rsquo;s Hands-on Machine Learning Book (github link). We build a regression model to predict median house values in Californian districts, given a number of features from these districts. More importantly, this project go through the basic building blocks when setting up any ML projects.\nFollowing are main steps to consider:\n Formulating the problem, defining the boundary conditions Data acquisition Discover and visualize data / Data exploration to gain insight Prepare data for ML algorithm training and testing Explore various model architectures to use Select model and train it Fine-tuning the model  ","permalink":"/blog/end2end_ml_project/","tags":["Python","Scikit-learn","Machine learning"],"title":"Property Price Prediction ML-model"},{"categories":null,"contents":"Convolutional neural network is used to train on the CIFAR-10 dataset using PyTorch.\nWhat does it consists of? The CIFAR-10 dataset consists of 60000 32x32 colour images in 10 classes, with 6000 images per class. There are 50000 training images and 10000 test images.\nThe dataset is divided into five training batches and one test batch, each with 10000 images. The test batch contains exactly 1000 randomly-selected images from each class. The training batches contain the remaining images in random order, but some training batches may contain more images from one class than another. Between them, the training batches contain exactly 5000 images from each class.\nWhat\u0026rsquo;s a Convolutional Neural Network (CNN)? Same as a neural network but are optimized for image analysis. Before training the weights and biases in the full-connected layer the training data is \u0026lsquo;screened and filtered\u0026rsquo; to tease out relevant features of each image by passing each image through a prescribed filter and \u0026lsquo;convolutions\u0026rsquo;. Think of it like passing a colored lens or fancy ink to selectively look at edges, contrasts, shapes in the image.\nFinally that a projection of that image is made by \u0026lsquo;pooling\u0026rsquo; which is a way of down-sampling the resulting convolution as a new data-point.\nGood reading links:\n http://cs231n.github.io/convolutional-networks/ https://adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks-Part-2/  ","permalink":"/blog/pytorch_cnn_example/","tags":["Python","PyTorch","Machine learning"],"title":"Implement CNN in PyTorch"},{"categories":null,"contents":"This tutorial is adapted from Jake VanderPlas\u0026rsquo;s example of SVM as given in his reference book: Python Data Science Handbook\n","permalink":"/blog/svm_usecase/","tags":["Python","Machine learning","Learning"],"title":"About Support Vector Machines"},{"categories":null,"contents":"High throughput screening of MaterialsProject dataset using pymatgen API for estimating perovskite bulk stability. For selected candidates, analyze their surface morphology using ab-initio thermodynamic analysis.\n","permalink":"/blog/perovskites/","tags":["Python","Thermodynamics","DFT"],"title":"Perovskite Stability Analysis"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}}, \u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }}, ... Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026#34;title\u0026#34;, \u0026#34;contents\u0026#34;, \u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34; ] ","permalink":"/search/","tags":null,"title":"Search Results"}]