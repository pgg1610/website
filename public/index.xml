<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Pushkar Ghanekar</title>
    <link>/</link>
    <description>Recent content in Home on Pushkar Ghanekar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Feb 2018 18:56:13 -0500</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Promoting a Safe Laboratory Environment Using the Reactive Hazard Evaluation and Analysis Compilation Tools</title>
      <link>/publications/rheact/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/publications/rheact/</guid>
      <description>Synopsis: In the past several years, the U.S. Chemical Safety Board has found an increase in the frequency of laboratory accidents and injuries. A framework to document, assess, and mitigate hazards is a critical starting point for ensuring safe laboratory practices. To address this requirement, I was part of a team working on developing Reactive Hazards Evaluation Analysis and Compilation Tool (RHEACT), an online platform to compile and scrutinize hazards-related information, was developed.</description>
    </item>
    
    <item>
      <title>Catalysis at Metal/Oxide Interfaces: Water Gas Shift at Pt/MgO Boundaries</title>
      <link>/publications/ptmgo/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/publications/ptmgo/</guid>
      <description>Synopsis: Catalysts comprising of metal nanoparticles dispersed on oxide supports have found applications in a vast number of chemical processes related to energy generation and environmental. In some cases, the interface between the metal and the supporting oxide is theorized to exhibit unique reactivity compared to just the metal or the oxide in isolation.
Water-Gas Shift reaction (WGSR) is one such reaction which is expected to show sensitivity to such metal/oxide interfaces.</description>
    </item>
    
    <item>
      <title>Electronic and Structural modification of Pt-V alloy and its consequences for Propane Dehydrogenation Catalysis</title>
      <link>/publications/pt3v/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/publications/pt3v/</guid>
      <description>Synopsis: Combination of experimental kinetics, state-of-the-art characterisation techiques and computation catalyst models to investigate the active site for propane dehydrogenation reaction. It is shown that alloying noble metals, platinum in this case, with another element (like vanadium) leads to changes in the catalytic performance. Through combined experiment/theory effort these performance and stability changes can be explained by perturbation in the electronic and structural properties of the alloys.</description>
    </item>
    
    <item>
      <title>Simple Graph Neural Network</title>
      <link>/blog/graph_nn/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/graph_nn/</guid>
      <description>Simple example to illustrate the utility and working of graph neural networks.
A natural way to represent information in a structured form is as a graph. A graph is a data structure describing a collection of entities, represented as nodes, and their pairwise relationships, represented as edges. Think of it as a mathematical abstraction to present relational data.
Graphs are everywhere: social networks, the world wide web, street maps, knowledge bases used in search engines, and even chemical molecules are frequently represented as a set of entities and relations between them.</description>
    </item>
    
    <item>
      <title>Simple Dropout using PyTorch</title>
      <link>/blog/simple_dropout/</link>
      <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/simple_dropout/</guid>
      <description>Simple dropout to implement uncertainty estimates: Bayesian Neural Networks  Adapted from Deep Learning online course notes from NYU. Note link Paper about using Dropout as a Bayesian Approximation  Another notebook which uses PyTorch dropout: Link
  Review article on application of uncertainty-quantification for small-molecule property prediction
  New paper on evidential deep learning
  In addition to predicting a value from a model it is also important to know the confidence in that prediction.</description>
    </item>
    
    <item>
      <title>Helpful links</title>
      <link>/blog/helpful_links/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/helpful_links/</guid>
      <description>List of links pertaining to eclectic areas of interest:
Special Mentions  John Kitchin&amp;rsquo;s DFT book Andrew White&amp;rsquo;s Deep Learning for Molecules and Materials Notebook Fundamentals of Data Visualization  Linear Algebra + Stats  Khan Academy Lectures 3Blue1Brown&amp;rsquo;s Essence of Linear Algebra Series Intuitive guide to Linear Algebra StatQuest  Calculus  3Blue1Brown&amp;rsquo;s Calculus Series Khan Academy&amp;rsquo;s Multivariate Calculus  Data Science Blogs  Nate Silver&amp;rsquo;s 538 Pudding&amp;rsquo;s data viz Spurious Correlations Understanding uncertaintly Math3ma Blog  Learning Python  Automate Boring Stuff with Python Scientific programing with Python Visual Guide to Numpy Project Euler Github Repo for Projects Python DataScience Handbook Chris Albon&amp;rsquo;s notes  ML + Datascience:  Hands-on Machine Learning Jakevdp Python Datascience Notbook Cool visual intro to ML Blog entry for Deep learning crash course Distill Blog  Cool Courses:  Harvard&amp;rsquo;s CS 109 Stanford&amp;rsquo;s CS - CNN course MIT&amp;rsquo;s Intro to Deep Learning Google&amp;rsquo;s ML crash course Deep learning for molecules NYU&amp;rsquo;s PyTorch Deep learning CMU&amp;rsquo;s course on Computer Graphics MIT&amp;rsquo;s course on Computational Thinking  YouTubers List of YouTuber channels that never fail to inspire me</description>
    </item>
    
    <item>
      <title>Analysis on Spice Use in Indian Food</title>
      <link>/blog/indian_spices_network_analysis/</link>
      <pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/indian_spices_network_analysis/</guid>
      <description>Indian food, like most of the food from the tropical region, uses a variety of different spices. Historically, the spices are thought to have been a way to increase the shelf-life and keep pests away. Whatever be the reason they sure are indespensible to food &amp;ndash; no matter which cuisine you&amp;rsquo;re making. Now, if you are planning to cook more Indian food lately, it would be great to know which spices would give you most bang for your buck.</description>
    </item>
    
    <item>
      <title>Bollywood Movie Rating Analysis</title>
      <link>/blog/imdb_scrapping/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/imdb_scrapping/</guid>
      <description>Analyzing averaging rating of Bollywood movies by using data from IMDb movie listing.</description>
    </item>
    
    <item>
      <title>Web scraping S&amp;P 500 data</title>
      <link>/blog/sp500/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/sp500/</guid>
      <description>Generate list of companies in the S&amp;amp;P500 using BeautifulSoup. Next, use yfinance a alternative to Yahoo! Finance&amp;rsquo;s historical data API to extract stock information. Plot year-to-date return on certain stocks to check trends.
List of SP500 companies is obtained from Wikipedia:
wiki_url = &amp;#39;https://en.wikipedia.org/wiki/List_of_S%26P_500_companies&amp;#39; response = get(wiki_url) html_soup = BeautifulSoup(response.text, &amp;#39;html.parser&amp;#39;) tab = html_soup.find(&amp;#34;table&amp;#34;,{&amp;#34;class&amp;#34;:&amp;#34;wikitable sortable&amp;#34;}) column_headings = [entry.text.strip() for entry in tab.findAll(&amp;#39;th&amp;#39;)] SP_500_dict = {keys:[] for keys in column_headings} Populate pandas dataframe with the listings:</description>
    </item>
    
    <item>
      <title>Bayesian Optimization using Gaussian Processes</title>
      <link>/blog/bo/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/bo/</guid>
      <description>Notebook explaining the idea behind bayesian optimization alongside a small example showing its use. This notebook was adapted from Martin Krasser&amp;rsquo;s blogpost Good introductory write-up on Bayesian optimization here Nice lecture explaining the working of Gaussian Processes here  Setup If f (objective function) is cheap to evaluate we can sample various points and built a potential surface however, if the f is expensive &amp;ndash; like in case of first-principles electronic structure calculations, it is important to minimize the number of f calls and number of samples drawn from this evaluation.</description>
    </item>
    
    <item>
      <title>Central limit theorem</title>
      <link>/blog/central_limit_theorem/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/central_limit_theorem/</guid>
      <description>What? Sampling points from a distribution and plotting the frequency of the sample mean approaches a normal distribution.
 We start with some crazy distribution that has got nothing to do with a normal distribution. Sample points from that distribution with some arbitrary sample size, following which we plot the sample mean (or sample sum) on a frequency table &amp;ndash; repeat this lot of times (tending to infinity) we end up getting a normal distribution of sample means!</description>
    </item>
    
    <item>
      <title>Property Price Prediction ML-model</title>
      <link>/blog/end2end_ml_project/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/end2end_ml_project/</guid>
      <description>This project is adapted from Aurelien Geron&amp;rsquo;s Hands-on Machine Learning Book (github link).
I build a regression model to predict median house values in Californian districts, given a number of features from these districts. More importantly, this project go through the basic building blocks when setting up any ML projects.
Following are main steps to consider:  Formulating the problem, defining the boundary conditions Data acquisition Discover and visualize data / Data exploration to gain insight Prepare data for ML algorithm training and testing Explore various model architectures to use Select model and train it Fine-tuning the model  Problem statement: Prediction of district&amp;rsquo;s median housing price given all other metrics.</description>
    </item>
    
    <item>
      <title>Property Price Prediction ML-model</title>
      <link>/blog/ml_project_temp/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/ml_project_temp/</guid>
      <description>End-to-end Machine Learning Project This project is obtained from Aurelien Geron&amp;rsquo;s ML book Chapter 2. The aim to predict median house values in Californian districts, given a number of features from these districts.
Main steps we will go through:
 Formulate the problem Get the data Discover and visualize data / Data exploration to gain insight Prep data for ML algorithm testing Select model and train it Fine-tuning the model  https://github.</description>
    </item>
    
    <item>
      <title>Implement CNN in PyTorch</title>
      <link>/blog/pytorch_cnn_example/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/pytorch_cnn_example/</guid>
      <description>Convolutional neural network is used to train on the CIFAR-10 dataset using PyTorch.
What does it consists of? The CIFAR-10 dataset consists of 60000 32x32 colour images in 10 classes, with 6000 images per class. There are 50000 training images and 10000 test images.
The dataset is divided into five training batches and one test batch, each with 10000 images. The test batch contains exactly 1000 randomly-selected images from each class.</description>
    </item>
    
    <item>
      <title>About Support Vector Machines</title>
      <link>/blog/svm_usecase/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/svm_usecase/</guid>
      <description>This tutorial is adapted from Jake VanderPlas&amp;rsquo;s example of SVM as given in his reference book: Python Data Science Handbook
Motivation for Support Vector Machines We want to find a line/curve (in 2D) or a manifold (in n-D) that divides the class from each other. This is a type of Discriminative Classification
Consider a simple case of classification task, in which the two classes of points are well separated. We can find region in space which best separates the data into two classes.</description>
    </item>
    
    <item>
      <title>Perovskite Stability Analysis</title>
      <link>/blog/perovskites/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/perovskites/</guid>
      <description>High throughput screening of MaterialsProject dataset using pymatgen API for estimating perovskite bulk stability. For selected candidates, analyze their surface morphology using ab-initio thermodynamic analysis.</description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml
[outputs] home = [&amp;#34;HTML&amp;#34;, &amp;#34;JSON&amp;#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.</description>
    </item>
    
  </channel>
</rss>